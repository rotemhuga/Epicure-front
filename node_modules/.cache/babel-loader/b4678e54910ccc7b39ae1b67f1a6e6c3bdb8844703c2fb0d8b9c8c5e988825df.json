{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst getData = fetch(\"http://localhost:8000/epicure/DishesPage\").then(response => response.json()).then(data => {\n  return data;\n}).catch(err => {\n  console.log(err.message);\n});\nconst dish = await getData;\nexport const dishesSlice = createSlice({\n  name: \"dishes\",\n  initialState: {\n    value: dish,\n    valueRestDishes: dish,\n    valueHomeRestDishes: dish\n  },\n  reducers: {\n    dishesPageFilter: (state, action) => {\n      switch (action.payload.type) {\n        case \"all\":\n          state.value = action.payload.data;\n          state.valueRestDishes = action.payload.data;\n          state.valueRestDishes = action.payload.data;\n          break;\n        case \"breakfast\":\n          console.log(action.payload.data);\n          state.valueRestDishes = action.payload.data.filter(dish => dish.isBreakfast === true);\n          break;\n        case \"Lunch\":\n          state.valueRestDishes = action.payload.data.filter(dish => dish.isLunch === true);\n          break;\n        case \"dinner\":\n          state.valueRestDishes = action.payload.data.filter(dish => dish.isDinner === true);\n          break;\n        default:\n          state.value = action.payload.data;\n      }\n    }\n  }\n});\nexport const {\n  dishesPageFilter\n} = dishesSlice.actions;\nexport default dishesSlice.reducer;\n\n// export const dishesSlice = createSlice({\n//   name: \"dishes\",\n//   initialState: {\n//     value: data.dishes,\n//     valueRestDishes: data.dishes,\n//     valueHomeRestDishes: data.dishes\n//   },\n//   reducers: {\n//     dishesPageFilter: (state,action) => {\n//       switch (action.payload.type){\n//         case \"all\":\n//           state.value = action.payload.data;\n//           state.valueRestDishes =  action.payload.data;\n//           state.valueRestDishes = action.payload.data;\n//           break;\n//         case \"breakfast\":\n//           console.log(action.payload.data)\n//           state.valueRestDishes = action.payload.data.filter(\n//             (dish:IdishesValue) => dish.isBreakfast === true);\n//           break;\n//         case \"Lunch\":\n//           state.valueRestDishes = action.payload.data.filter(\n//             (dish:IdishesValue) => dish.isLunch === true);\n//           break;\n//         case \"dinner\":\n//           state.valueRestDishes = action.payload.data.filter(\n//             (dish:IdishesValue) => dish.isDinner === true);\n//           break;\n\n//       default:\n//         state.value = action.payload.data\n//       }\n//     }\n//   },\n// });\n\n// export const { dishesPageFilter } = dishesSlice.actions;\n// export default dishesSlice.reducer;","map":{"version":3,"names":["createSlice","getData","fetch","then","response","json","data","catch","err","console","log","message","dish","dishesSlice","name","initialState","value","valueRestDishes","valueHomeRestDishes","reducers","dishesPageFilter","state","action","payload","type","filter","isBreakfast","isLunch","isDinner","actions","reducer"],"sources":["C:/Users/ROTEM/Desktop/Course Fullstack/exercises/final project/Epicure/front/src/store/slices/dishesSlice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport data from \"../../epicure.json\"\r\nimport { Idishes, IdishesValue } from \"../../interfaces\";\r\n\r\nconst getData = fetch(\"http://localhost:8000/epicure/DishesPage\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((err:any) => {\r\n        console.log(err.message);\r\n    });\r\n\r\nconst dish:any = await getData;\r\n\r\nexport const dishesSlice = createSlice({\r\n  name: \"dishes\",\r\n  initialState: {\r\n    value: dish,\r\n    valueRestDishes: dish,\r\n    valueHomeRestDishes: dish\r\n  },\r\n  reducers: {\r\n    dishesPageFilter: (state,action) => {\r\n      switch (action.payload.type){\r\n        case \"all\":\r\n          state.value = action.payload.data;\r\n          state.valueRestDishes =  action.payload.data;\r\n          state.valueRestDishes = action.payload.data;\r\n          break;\r\n        case \"breakfast\":\r\n          console.log(action.payload.data)\r\n          state.valueRestDishes = action.payload.data.filter(\r\n            (dish:IdishesValue) => dish.isBreakfast === true);\r\n          break;\r\n        case \"Lunch\":\r\n          state.valueRestDishes = action.payload.data.filter(\r\n            (dish:IdishesValue) => dish.isLunch === true);\r\n          break;\r\n        case \"dinner\":\r\n          state.valueRestDishes = action.payload.data.filter(\r\n            (dish:IdishesValue) => dish.isDinner === true);\r\n          break;\r\n\r\n      default:\r\n        state.value = action.payload.data\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport const { dishesPageFilter } = dishesSlice.actions;\r\nexport default dishesSlice.reducer;\r\n\r\n// export const dishesSlice = createSlice({\r\n//   name: \"dishes\",\r\n//   initialState: {\r\n//     value: data.dishes,\r\n//     valueRestDishes: data.dishes,\r\n//     valueHomeRestDishes: data.dishes\r\n//   },\r\n//   reducers: {\r\n//     dishesPageFilter: (state,action) => {\r\n//       switch (action.payload.type){\r\n//         case \"all\":\r\n//           state.value = action.payload.data;\r\n//           state.valueRestDishes =  action.payload.data;\r\n//           state.valueRestDishes = action.payload.data;\r\n//           break;\r\n//         case \"breakfast\":\r\n//           console.log(action.payload.data)\r\n//           state.valueRestDishes = action.payload.data.filter(\r\n//             (dish:IdishesValue) => dish.isBreakfast === true);\r\n//           break;\r\n//         case \"Lunch\":\r\n//           state.valueRestDishes = action.payload.data.filter(\r\n//             (dish:IdishesValue) => dish.isLunch === true);\r\n//           break;\r\n//         case \"dinner\":\r\n//           state.valueRestDishes = action.payload.data.filter(\r\n//             (dish:IdishesValue) => dish.isDinner === true);\r\n//           break;\r\n\r\n//       default:\r\n//         state.value = action.payload.data\r\n//       }\r\n//     }\r\n//   },\r\n// });\r\n\r\n// export const { dishesPageFilter } = dishesSlice.actions;\r\n// export default dishesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAI9C,MAAMC,OAAO,GAAGC,KAAK,CAAC,0CAA0C,CAAC,CAC5DC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;EACd,OAAOA,IAAI;AACb,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAO,IAAK;EAChBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;AAC5B,CAAC,CAAC;AAEN,MAAMC,IAAQ,GAAG,MAAMX,OAAO;AAE9B,OAAO,MAAMY,WAAW,GAAGb,WAAW,CAAC;EACrCc,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,KAAK,EAAEJ,IAAI;IACXK,eAAe,EAAEL,IAAI;IACrBM,mBAAmB,EAAEN;EACvB,CAAC;EACDO,QAAQ,EAAE;IACRC,gBAAgB,EAAE,CAACC,KAAK,EAACC,MAAM,KAAK;MAClC,QAAQA,MAAM,CAACC,OAAO,CAACC,IAAI;QACzB,KAAK,KAAK;UACRH,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO,CAACjB,IAAI;UACjCe,KAAK,CAACJ,eAAe,GAAIK,MAAM,CAACC,OAAO,CAACjB,IAAI;UAC5Ce,KAAK,CAACJ,eAAe,GAAGK,MAAM,CAACC,OAAO,CAACjB,IAAI;UAC3C;QACF,KAAK,WAAW;UACdG,OAAO,CAACC,GAAG,CAACY,MAAM,CAACC,OAAO,CAACjB,IAAI,CAAC;UAChCe,KAAK,CAACJ,eAAe,GAAGK,MAAM,CAACC,OAAO,CAACjB,IAAI,CAACmB,MAAM,CAC/Cb,IAAiB,IAAKA,IAAI,CAACc,WAAW,KAAK,IAAI,CAAC;UACnD;QACF,KAAK,OAAO;UACVL,KAAK,CAACJ,eAAe,GAAGK,MAAM,CAACC,OAAO,CAACjB,IAAI,CAACmB,MAAM,CAC/Cb,IAAiB,IAAKA,IAAI,CAACe,OAAO,KAAK,IAAI,CAAC;UAC/C;QACF,KAAK,QAAQ;UACXN,KAAK,CAACJ,eAAe,GAAGK,MAAM,CAACC,OAAO,CAACjB,IAAI,CAACmB,MAAM,CAC/Cb,IAAiB,IAAKA,IAAI,CAACgB,QAAQ,KAAK,IAAI,CAAC;UAChD;QAEJ;UACEP,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO,CAACjB,IAAI;MAAA;IAErC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEc;AAAiB,CAAC,GAAGP,WAAW,CAACgB,OAAO;AACvD,eAAehB,WAAW,CAACiB,OAAO;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}