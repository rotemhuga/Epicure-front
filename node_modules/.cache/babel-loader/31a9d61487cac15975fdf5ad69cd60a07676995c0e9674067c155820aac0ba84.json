{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport data from \"../../epicure.json\";\nexport const dishesSlice = createSlice({\n  name: \"dishes\",\n  initialState: {\n    value: data.dishes,\n    valueRestDishes: data.dishes,\n    valueHomeRestDishes: data.dishes\n  },\n  reducers: {\n    dishesPageFilter: (state, action) => {\n      switch (action.payload.type) {\n        case \"all\":\n          state.value = action.payload.data;\n          state.valueRestDishes = action.payload.data;\n          state.valueRestDishes = action.payload.data;\n          break;\n        case \"breakfast\":\n          console.log(action.payload.data);\n          state.valueRestDishes = action.payload.data.filter(dish => dish.isBreakfast === true);\n          break;\n        case \"Lunch\":\n          state.valueRestDishes = action.payload.data.filter(dish => dish.isLunch === true);\n          break;\n        case \"dinner\":\n          state.valueRestDishes = action.payload.data.filter(dish => dish.isDinner === true);\n          break;\n        default:\n          state.value = action.payload.data;\n      }\n    }\n  }\n});\nexport const {\n  dishesPageFilter\n} = dishesSlice.actions;\nexport default dishesSlice.reducer;\n\n// export const dishesSlice = createSlice({\n//   name: \"dishes\",\n//   initialState: {\n//     value: data.dishes,\n//     valueRestDishes: data.dishes,\n//     valueHomeRestDishes: data.dishes\n//   },\n//   reducers: {\n//     dishesPageFilter: (state,action) => {\n//       switch (action.payload.type){\n//         case \"all\":\n//           state.value = action.payload.data;\n//           state.valueRestDishes =  action.payload.data;\n//           state.valueRestDishes = action.payload.data;\n//           break;\n//         case \"breakfast\":\n//           console.log(action.payload.data)\n//           state.valueRestDishes = action.payload.data.filter(\n//             (dish:IdishesValue) => dish.isBreakfast === true);\n//           break;\n//         case \"Lunch\":\n//           state.valueRestDishes = action.payload.data.filter(\n//             (dish:IdishesValue) => dish.isLunch === true);\n//           break;\n//         case \"dinner\":\n//           state.valueRestDishes = action.payload.data.filter(\n//             (dish:IdishesValue) => dish.isDinner === true);\n//           break;\n\n//       default:\n//         state.value = action.payload.data\n//       }\n//     }\n//   },\n// });\n\n// export const { dishesPageFilter } = dishesSlice.actions;\n// export default dishesSlice.reducer;","map":{"version":3,"names":["createSlice","data","dishesSlice","name","initialState","value","dishes","valueRestDishes","valueHomeRestDishes","reducers","dishesPageFilter","state","action","payload","type","console","log","filter","dish","isBreakfast","isLunch","isDinner","actions","reducer"],"sources":["C:/Users/ROTEM/Desktop/Course Fullstack/exercises/final project/Epicure/front/src/store/slices/dishesSlice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport data from \"../../epicure.json\"\r\nimport { Idishes, IdishesValue } from \"../../interfaces\";\r\n\r\n\r\n\r\nexport const dishesSlice = createSlice({\r\n  name: \"dishes\",\r\n  initialState: {\r\n    value: data.dishes,\r\n    valueRestDishes: data.dishes,\r\n    valueHomeRestDishes: data.dishes\r\n  },\r\n  reducers: {\r\n    dishesPageFilter: (state,action) => {\r\n      switch (action.payload.type){\r\n        case \"all\":\r\n          state.value = action.payload.data;\r\n          state.valueRestDishes =  action.payload.data;\r\n          state.valueRestDishes = action.payload.data;\r\n          break;\r\n        case \"breakfast\":\r\n          console.log(action.payload.data)\r\n          state.valueRestDishes = action.payload.data.filter(\r\n            (dish:IdishesValue) => dish.isBreakfast === true);\r\n          break;\r\n        case \"Lunch\":\r\n          state.valueRestDishes = action.payload.data.filter(\r\n            (dish:IdishesValue) => dish.isLunch === true);\r\n          break;\r\n        case \"dinner\":\r\n          state.valueRestDishes = action.payload.data.filter(\r\n            (dish:IdishesValue) => dish.isDinner === true);\r\n          break;\r\n\r\n      default:\r\n        state.value = action.payload.data\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport const { dishesPageFilter } = dishesSlice.actions;\r\nexport default dishesSlice.reducer;\r\n\r\n// export const dishesSlice = createSlice({\r\n//   name: \"dishes\",\r\n//   initialState: {\r\n//     value: data.dishes,\r\n//     valueRestDishes: data.dishes,\r\n//     valueHomeRestDishes: data.dishes\r\n//   },\r\n//   reducers: {\r\n//     dishesPageFilter: (state,action) => {\r\n//       switch (action.payload.type){\r\n//         case \"all\":\r\n//           state.value = action.payload.data;\r\n//           state.valueRestDishes =  action.payload.data;\r\n//           state.valueRestDishes = action.payload.data;\r\n//           break;\r\n//         case \"breakfast\":\r\n//           console.log(action.payload.data)\r\n//           state.valueRestDishes = action.payload.data.filter(\r\n//             (dish:IdishesValue) => dish.isBreakfast === true);\r\n//           break;\r\n//         case \"Lunch\":\r\n//           state.valueRestDishes = action.payload.data.filter(\r\n//             (dish:IdishesValue) => dish.isLunch === true);\r\n//           break;\r\n//         case \"dinner\":\r\n//           state.valueRestDishes = action.payload.data.filter(\r\n//             (dish:IdishesValue) => dish.isDinner === true);\r\n//           break;\r\n\r\n//       default:\r\n//         state.value = action.payload.data\r\n//       }\r\n//     }\r\n//   },\r\n// });\r\n\r\n// export const { dishesPageFilter } = dishesSlice.actions;\r\n// export default dishesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,oBAAoB;AAKrC,OAAO,MAAMC,WAAW,GAAGF,WAAW,CAAC;EACrCG,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,KAAK,EAAEJ,IAAI,CAACK,MAAM;IAClBC,eAAe,EAAEN,IAAI,CAACK,MAAM;IAC5BE,mBAAmB,EAAEP,IAAI,CAACK;EAC5B,CAAC;EACDG,QAAQ,EAAE;IACRC,gBAAgB,EAAE,CAACC,KAAK,EAACC,MAAM,KAAK;MAClC,QAAQA,MAAM,CAACC,OAAO,CAACC,IAAI;QACzB,KAAK,KAAK;UACRH,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO,CAACZ,IAAI;UACjCU,KAAK,CAACJ,eAAe,GAAIK,MAAM,CAACC,OAAO,CAACZ,IAAI;UAC5CU,KAAK,CAACJ,eAAe,GAAGK,MAAM,CAACC,OAAO,CAACZ,IAAI;UAC3C;QACF,KAAK,WAAW;UACdc,OAAO,CAACC,GAAG,CAACJ,MAAM,CAACC,OAAO,CAACZ,IAAI,CAAC;UAChCU,KAAK,CAACJ,eAAe,GAAGK,MAAM,CAACC,OAAO,CAACZ,IAAI,CAACgB,MAAM,CAC/CC,IAAiB,IAAKA,IAAI,CAACC,WAAW,KAAK,IAAI,CAAC;UACnD;QACF,KAAK,OAAO;UACVR,KAAK,CAACJ,eAAe,GAAGK,MAAM,CAACC,OAAO,CAACZ,IAAI,CAACgB,MAAM,CAC/CC,IAAiB,IAAKA,IAAI,CAACE,OAAO,KAAK,IAAI,CAAC;UAC/C;QACF,KAAK,QAAQ;UACXT,KAAK,CAACJ,eAAe,GAAGK,MAAM,CAACC,OAAO,CAACZ,IAAI,CAACgB,MAAM,CAC/CC,IAAiB,IAAKA,IAAI,CAACG,QAAQ,KAAK,IAAI,CAAC;UAChD;QAEJ;UACEV,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO,CAACZ,IAAI;MAAA;IAErC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAES;AAAiB,CAAC,GAAGR,WAAW,CAACoB,OAAO;AACvD,eAAepB,WAAW,CAACqB,OAAO;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}