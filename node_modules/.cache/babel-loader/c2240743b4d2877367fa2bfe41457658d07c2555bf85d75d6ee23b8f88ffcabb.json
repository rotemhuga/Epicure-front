{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROTEM\\\\Desktop\\\\Course Fullstack\\\\exercises\\\\final project\\\\Epicure\\\\src\\\\component\\\\General\\\\Week_chef\\\\Week_chef.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"../Week_chef/Week_chef.css\";\nimport data from \"../../../epicure.json\";\nimport CardWeekChef from \"../../Card_week_chef/Card_week_chef\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Week_chef = () => {\n  _s();\n  const restaurants = useSelector(state => state.restaurants.value);\n  const items = data.chefs.map(item => {\n    const chefRest = item.restaurants;\n    const choosen = chefRest.map(restid => {\n      const choosenObj = data.restaurants.filter(restObj => restObj.id === restid)[0];\n      return choosenObj;\n    });\n    if (item.isChefOfTheWeek === true) {\n      return /*#__PURE__*/_jsxDEV(CardWeekChef, {\n        class: item.name,\n        srcChef: require(`../../../assets/images/${item.portrait}.png`),\n        ChefName: item.name,\n        info: item.info,\n        restTitle: `${item.firstName}'s Restaurants`,\n        chefResturants: choosen\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }, this);\n    } else {\n      return null;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"week-chef-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"week-chef-title\",\n      children: \"CHEF OF THE WEEK:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"week-chef-all-content\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Week_chef, \"CpGS9RVjovwBI8ka3fGePdjPkRE=\", true);\n_c = Week_chef;\nexport default Week_chef;\n// const Week_chef: React.FC = ()=> {\n//     const items = data.chefs.map((item:Ichefs) => {\n//         const chefRest = item.restaurants\n//         const choosen =  chefRest.map((restid:string) => {\n//             const choosenObj = data.restaurants.filter((restObj) => restObj.id === restid)[0]\n//             return choosenObj\n//         })\n//         if (item.isChefOfTheWeek === true) { \n//                  return < CardWeekChef\n//             class= {item.name}\n//             srcChef= {require(`../../../assets/images/${item.portrait}.png`)}\n//             ChefName = {item.name}\n//             info = {item.info}\n//             restTitle = {`${item.firstName}'s Restaurants`}\n//             chefResturants = {choosen} \n//             key = {item.id}\n//             /> \n//         } else {\n//             return null;\n//         }   \n//     })\n//     return (\n//         <div id=\"week-chef-container\">\n//             <div id=\"week-chef-title\">CHEF OF THE WEEK:</div>\n//             <div id=\"week-chef-all-content\">\n//                 {items}\n//             </div>\n//         </div>\n//     ) \n// }\n\n// export default Week_chef\nvar _c;\n$RefreshReg$(_c, \"Week_chef\");","map":{"version":3,"names":["React","data","CardWeekChef","Week_chef","restaurants","useSelector","state","value","items","chefs","map","item","chefRest","choosen","restid","choosenObj","filter","restObj","id","isChefOfTheWeek","name","require","portrait","info","firstName"],"sources":["C:/Users/ROTEM/Desktop/Course Fullstack/exercises/final project/Epicure/src/component/General/Week_chef/Week_chef.tsx"],"sourcesContent":["import React from \"react\";\r\nimport \"../Week_chef/Week_chef.css\"\r\nimport data from \"../../../epicure.json\"\r\nimport CardWeekChef from \"../../Card_week_chef/Card_week_chef\"\r\nimport { IchefsValue } from \"../../../interfaces\";\r\n \r\nconst Week_chef: React.FC = ()=> {\r\n    const restaurants = useSelector(\r\n        (state:IRootState) => state.restaurants.value\r\n    );  \r\n    const items = data.chefs.map((item:any) => {\r\n        const chefRest = item.restaurants\r\n        const choosen =  chefRest.map((restid:string) => {\r\n            const choosenObj = data.restaurants.filter((restObj) => restObj.id === restid)[0]\r\n            return choosenObj\r\n        })\r\n        if (item.isChefOfTheWeek === true) { \r\n                 return < CardWeekChef\r\n            class= {item.name}\r\n            srcChef= {require(`../../../assets/images/${item.portrait}.png`)}\r\n            ChefName = {item.name}\r\n            info = {item.info}\r\n            restTitle = {`${item.firstName}'s Restaurants`}\r\n            chefResturants = {choosen} \r\n            key = {item.id}\r\n            /> \r\n        } else {\r\n            return null;\r\n        }   \r\n    })\r\n    return (\r\n        <div id=\"week-chef-container\">\r\n            <div id=\"week-chef-title\">CHEF OF THE WEEK:</div>\r\n            <div id=\"week-chef-all-content\">\r\n                {items}\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default Week_chef\r\n// const Week_chef: React.FC = ()=> {\r\n//     const items = data.chefs.map((item:Ichefs) => {\r\n//         const chefRest = item.restaurants\r\n//         const choosen =  chefRest.map((restid:string) => {\r\n//             const choosenObj = data.restaurants.filter((restObj) => restObj.id === restid)[0]\r\n//             return choosenObj\r\n//         })\r\n//         if (item.isChefOfTheWeek === true) { \r\n//                  return < CardWeekChef\r\n//             class= {item.name}\r\n//             srcChef= {require(`../../../assets/images/${item.portrait}.png`)}\r\n//             ChefName = {item.name}\r\n//             info = {item.info}\r\n//             restTitle = {`${item.firstName}'s Restaurants`}\r\n//             chefResturants = {choosen} \r\n//             key = {item.id}\r\n//             /> \r\n//         } else {\r\n//             return null;\r\n//         }   \r\n//     })\r\n//     return (\r\n//         <div id=\"week-chef-container\">\r\n//             <div id=\"week-chef-title\">CHEF OF THE WEEK:</div>\r\n//             <div id=\"week-chef-all-content\">\r\n//                 {items}\r\n//             </div>\r\n//         </div>\r\n//     ) \r\n// }\r\n\r\n// export default Week_chef\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,4BAA4B;AACnC,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,YAAY,MAAM,qCAAqC;AAAA;AAG9D,MAAMC,SAAmB,GAAG,MAAK;EAAA;EAC7B,MAAMC,WAAW,GAAGC,WAAW,CAC1BC,KAAgB,IAAKA,KAAK,CAACF,WAAW,CAACG,KAAK,CAChD;EACD,MAAMC,KAAK,GAAGP,IAAI,CAACQ,KAAK,CAACC,GAAG,CAAEC,IAAQ,IAAK;IACvC,MAAMC,QAAQ,GAAGD,IAAI,CAACP,WAAW;IACjC,MAAMS,OAAO,GAAID,QAAQ,CAACF,GAAG,CAAEI,MAAa,IAAK;MAC7C,MAAMC,UAAU,GAAGd,IAAI,CAACG,WAAW,CAACY,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKJ,MAAM,CAAC,CAAC,CAAC,CAAC;MACjF,OAAOC,UAAU;IACrB,CAAC,CAAC;IACF,IAAIJ,IAAI,CAACQ,eAAe,KAAK,IAAI,EAAE;MAC1B,oBAAO,QAAE,YAAY;QAC1B,KAAK,EAAGR,IAAI,CAACS,IAAK;QAClB,OAAO,EAAGC,OAAO,CAAE,0BAAyBV,IAAI,CAACW,QAAS,MAAK,CAAE;QACjE,QAAQ,EAAIX,IAAI,CAACS,IAAK;QACtB,IAAI,EAAIT,IAAI,CAACY,IAAK;QAClB,SAAS,EAAK,GAAEZ,IAAI,CAACa,SAAU,gBAAgB;QAC/C,cAAc,EAAIX;MAAQ,GACnBF,IAAI,CAACO,EAAE;QAAA;QAAA;QAAA;MAAA,QACZ;IACN,CAAC,MAAM;MACH,OAAO,IAAI;IACf;EACJ,CAAC,CAAC;EACF,oBACI;IAAK,EAAE,EAAC,qBAAqB;IAAA,wBACzB;MAAK,EAAE,EAAC,iBAAiB;MAAA,UAAC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAM,eACjD;MAAK,EAAE,EAAC,uBAAuB;MAAA,UAC1BV;IAAK;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GAhCKL,SAAmB;AAAA,KAAnBA,SAAmB;AAkCzB,eAAeA,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}