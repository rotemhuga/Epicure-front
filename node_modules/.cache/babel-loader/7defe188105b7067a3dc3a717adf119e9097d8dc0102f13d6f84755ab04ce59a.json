{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROTEM\\\\Desktop\\\\Course Fullstack\\\\exercises\\\\final project\\\\Epicure\\\\src\\\\component\\\\General\\\\Rest_filter_link\\\\Rest_filter_link.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./Rest_filter_link.css\";\nimport { useState } from \"react\";\nimport NavButton from \"../NavButton_nav/NavButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { restaurantPageFilter } from \"../../../store/slices/restaurantsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestFilterLink = () => {\n  _s();\n  const dispatch = useDispatch();\n  const restFilter = useSelector(state => state.restaurants.value);\n  const [activeButton, setActiveButton] = useState(\"all\");\n  const [clicked, setClicked] = useState(\"\");\n  const handleAllClick = () => {\n    dispatch(restaurantPageFilter(\"all\"));\n    setActiveButton(\"all\");\n    setClicked(\"all\");\n  };\n  const handleNewClick = () => {\n    dispatch(restaurantPageFilter(\"new\"));\n    setActiveButton(\"new\");\n  };\n  const handleMostPopularClick = () => {\n    dispatch(restaurantPageFilter(\"mostPopular\"));\n    setActiveButton(\"mostPopular\");\n  };\n  const handleOpenNowClick = () => {\n    dispatch(restaurantPageFilter(\"openNow\"));\n    setActiveButton(\"openNow\");\n  };\n  const handleMapViewClick = () => {\n    dispatch(restaurantPageFilter(\"mapView\"));\n    setActiveButton(\"mapView\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-buttons\",\n    children: [/*#__PURE__*/_jsxDEV(NavButton, {\n      name: \"All\",\n      class: \"button-all-rest\",\n      onClick: handleAllClick,\n      id: clicked === \"all\" ? \"clicked\" : \"not-clicked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n      name: \"New\",\n      class: \"button-new\",\n      onClick: handleNewClick,\n      id: clicked === \"all\" ? \"clicked\" : \"not-clicked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n      name: \"Most Popular\",\n      class: \"button-most-popular\",\n      onClick: handleMostPopularClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n      name: \"Open Now\",\n      class: \"button-open-now\",\n      onClick: handleOpenNowClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n      name: \"Map View\",\n      class: \"button-map-view\",\n      onClick: handleMapViewClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(RestFilterLink, \"BclE5xL189HacJUDFoikTiSliGc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = RestFilterLink;\nexport default RestFilterLink;\nvar _c;\n$RefreshReg$(_c, \"RestFilterLink\");","map":{"version":3,"names":["React","useState","NavButton","useDispatch","useSelector","restaurantPageFilter","RestFilterLink","dispatch","restFilter","state","restaurants","value","activeButton","setActiveButton","clicked","setClicked","handleAllClick","handleNewClick","handleMostPopularClick","handleOpenNowClick","handleMapViewClick"],"sources":["C:/Users/ROTEM/Desktop/Course Fullstack/exercises/final project/Epicure/src/component/General/Rest_filter_link/Rest_filter_link.tsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./Rest_filter_link.css\"\r\nimport { useState } from \"react\";\r\nimport NavButton from \"../NavButton_nav/NavButton\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IRootState } from \"../../../interfaces\";\r\nimport {\r\n    restaurantPageFilter\r\n  } from \"../../../store/slices/restaurantsSlice\"\r\n\r\nconst RestFilterLink: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const restFilter = useSelector((state: IRootState) => state.restaurants.value)\r\n    const [activeButton, setActiveButton] = useState (\"all\")\r\n    const [clicked, setClicked] = useState(\"\")\r\n    \r\n    const handleAllClick = () => {\r\n        dispatch(restaurantPageFilter(\"all\"));\r\n        setActiveButton(\"all\")\r\n        setClicked(\"all\")\r\n    }\r\n    const handleNewClick = () => {\r\n        dispatch(restaurantPageFilter(\"new\"));\r\n        setActiveButton(\"new\")\r\n    }\r\n    const handleMostPopularClick = () => {\r\n        dispatch(restaurantPageFilter(\"mostPopular\"));\r\n        setActiveButton(\"mostPopular\")\r\n    }\r\n    const handleOpenNowClick = () => {\r\n        dispatch(restaurantPageFilter(\"openNow\"));\r\n        setActiveButton(\"openNow\")\r\n    }\r\n    const handleMapViewClick = () => {\r\n        dispatch(restaurantPageFilter(\"mapView\"));\r\n        setActiveButton(\"mapView\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"all-buttons\">\r\n            <NavButton name={\"All\"} class=\"button-all-rest\"  onClick={(handleAllClick)} id={clicked === \"all\" ? \"clicked\" : \"not-clicked\"} />\r\n            <NavButton name={\"New\"} class=\"button-new\" onClick={(handleNewClick)}  id={clicked === \"all\" ? \"clicked\" : \"not-clicked\"}/>\r\n            <NavButton name={\"Most Popular\"} class=\"button-most-popular\" onClick={handleMostPopularClick}/>\r\n            <NavButton name={\"Open Now\"} class=\"button-open-now\" onClick={handleOpenNowClick}/>\r\n            <NavButton name={\"Map View\"} class=\"button-map-view\" onClick={handleMapViewClick}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RestFilterLink"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,wBAAwB;AAC/B,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,4BAA4B;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SACIC,oBAAoB,QACf,wCAAwC;AAAA;AAEjD,MAAMC,cAAwB,GAAG,MAAM;EAAA;EACnC,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAMK,UAAU,GAAGJ,WAAW,CAAEK,KAAiB,IAAKA,KAAK,CAACC,WAAW,CAACC,KAAK,CAAC;EAC9E,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAE,KAAK,CAAC;EACxD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMe,cAAc,GAAG,MAAM;IACzBT,QAAQ,CAACF,oBAAoB,CAAC,KAAK,CAAC,CAAC;IACrCQ,eAAe,CAAC,KAAK,CAAC;IACtBE,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EACD,MAAME,cAAc,GAAG,MAAM;IACzBV,QAAQ,CAACF,oBAAoB,CAAC,KAAK,CAAC,CAAC;IACrCQ,eAAe,CAAC,KAAK,CAAC;EAC1B,CAAC;EACD,MAAMK,sBAAsB,GAAG,MAAM;IACjCX,QAAQ,CAACF,oBAAoB,CAAC,aAAa,CAAC,CAAC;IAC7CQ,eAAe,CAAC,aAAa,CAAC;EAClC,CAAC;EACD,MAAMM,kBAAkB,GAAG,MAAM;IAC7BZ,QAAQ,CAACF,oBAAoB,CAAC,SAAS,CAAC,CAAC;IACzCQ,eAAe,CAAC,SAAS,CAAC;EAC9B,CAAC;EACD,MAAMO,kBAAkB,GAAG,MAAM;IAC7Bb,QAAQ,CAACF,oBAAoB,CAAC,SAAS,CAAC,CAAC;IACzCQ,eAAe,CAAC,SAAS,CAAC;EAC9B,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,aAAa;IAAA,wBACxB,QAAC,SAAS;MAAC,IAAI,EAAE,KAAM;MAAC,KAAK,EAAC,iBAAiB;MAAE,OAAO,EAAGG,cAAgB;MAAC,EAAE,EAAEF,OAAO,KAAK,KAAK,GAAG,SAAS,GAAG;IAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eACjI,QAAC,SAAS;MAAC,IAAI,EAAE,KAAM;MAAC,KAAK,EAAC,YAAY;MAAC,OAAO,EAAGG,cAAgB;MAAE,EAAE,EAAEH,OAAO,KAAK,KAAK,GAAG,SAAS,GAAG;IAAc;MAAA;MAAA;MAAA;IAAA,QAAE,eAC3H,QAAC,SAAS;MAAC,IAAI,EAAE,cAAe;MAAC,KAAK,EAAC,qBAAqB;MAAC,OAAO,EAAEI;IAAuB;MAAA;MAAA;MAAA;IAAA,QAAE,eAC/F,QAAC,SAAS;MAAC,IAAI,EAAE,UAAW;MAAC,KAAK,EAAC,iBAAiB;MAAC,OAAO,EAAEC;IAAmB;MAAA;MAAA;MAAA;IAAA,QAAE,eACnF,QAAC,SAAS;MAAC,IAAI,EAAE,UAAW;MAAC,KAAK,EAAC,iBAAiB;MAAC,OAAO,EAAEC;IAAmB;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACjF;AAEd,CAAC;AAAA,GArCKd,cAAwB;EAAA,QACTH,WAAW,EACTC,WAAW;AAAA;AAAA,KAF5BE,cAAwB;AAuC9B,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}