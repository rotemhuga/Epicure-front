{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport data from \"../../epicure.json\";\nexport const chefsSlice = createSlice({\n  name: \"chefs\",\n  initialState: {\n    value: data.chefs\n  },\n  reducers: {\n    chefsPageFilter: (state, action) => {\n      const chefFilterType = action.payload;\n      switch (chefFilterType) {\n        case \"all\":\n          state.value = data.chefs;\n          break;\n        case \"new\":\n          state.value = data.chefs;\n          state.value = state.value.filter(chef => chef.isNew === true);\n          break;\n        case \"mostViewed\":\n          state.value = data.chefs;\n          state.value = state.value.filter(chef => chef.mostViewed === true);\n          break;\n        default:\n          state.value = state.value;\n      }\n    }\n  }\n});\nexport const {\n  chefsPageFilter\n} = chefsSlice.actions;\nexport default chefsSlice.reducer;","map":{"version":3,"names":["createSlice","data","chefsSlice","name","initialState","value","chefs","reducers","chefsPageFilter","state","action","chefFilterType","payload","filter","chef","isNew","mostViewed","actions","reducer"],"sources":["C:/Users/ROTEM/Desktop/Course Fullstack/exercises/final project/Epicure/src/store/slices/chefsSlice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport data from \"../../epicure.json\"\r\n\r\nexport const chefsSlice = createSlice({\r\n  name: \"chefs\",\r\n  initialState: {\r\n    value: data.chefs,\r\n  },\r\n  reducers: {\r\n    chefsPageFilter: (state,action) => {\r\n      const chefFilterType = action.payload;\r\n        switch (chefFilterType){\r\n          case \"all\":\r\n            state.value = data.chefs\r\n            break;\r\n          case \"new\":\r\n            state.value = data.chefs\r\n            state.value = state.value.filter(\r\n              (chef) => chef.isNew === true);\r\n            break;\r\n          case \"mostViewed\":\r\n            state.value = data.chefs\r\n            state.value = state.value.filter(\r\n              (chef) => chef.mostViewed === true);\r\n            break;\r\n\r\n          default:\r\n          state.value = state.value;\r\n        }\r\n      }\r\n  }\r\n});\r\n\r\nexport const { chefsPageFilter } = chefsSlice.actions;\r\nexport default chefsSlice.reducer;\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,oBAAoB;AAErC,OAAO,MAAMC,UAAU,GAAGF,WAAW,CAAC;EACpCG,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAEJ,IAAI,CAACK;EACd,CAAC;EACDC,QAAQ,EAAE;IACRC,eAAe,EAAE,CAACC,KAAK,EAACC,MAAM,KAAK;MACjC,MAAMC,cAAc,GAAGD,MAAM,CAACE,OAAO;MACnC,QAAQD,cAAc;QACpB,KAAK,KAAK;UACRF,KAAK,CAACJ,KAAK,GAAGJ,IAAI,CAACK,KAAK;UACxB;QACF,KAAK,KAAK;UACRG,KAAK,CAACJ,KAAK,GAAGJ,IAAI,CAACK,KAAK;UACxBG,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACQ,MAAM,CAC7BC,IAAI,IAAKA,IAAI,CAACC,KAAK,KAAK,IAAI,CAAC;UAChC;QACF,KAAK,YAAY;UACfN,KAAK,CAACJ,KAAK,GAAGJ,IAAI,CAACK,KAAK;UACxBG,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACQ,MAAM,CAC7BC,IAAI,IAAKA,IAAI,CAACE,UAAU,KAAK,IAAI,CAAC;UACrC;QAEF;UACAP,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK;MAAC;IAE9B;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEG;AAAgB,CAAC,GAAGN,UAAU,CAACe,OAAO;AACrD,eAAef,UAAU,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}