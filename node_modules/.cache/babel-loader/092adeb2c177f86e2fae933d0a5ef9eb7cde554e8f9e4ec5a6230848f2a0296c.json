{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n// import data from \"../../epicure.json\"\n\nfetch(\"http://localhost:8000/epicure\").then(response => response.json()).then(data => {\n  console.log(data);\n});\nexport const restaurantsSlice = createSlice({\n  name: \"restaurants\",\n  initialState: {\n    value: data\n  },\n  reducers: {\n    restaurantPageFilter: (state, action) => {\n      const filterType = action.payload;\n      switch (filterType) {\n        case \"all\":\n          state.value = data.restaurants;\n          break;\n        case \"new\":\n          state.value = data.restaurants;\n          state.value = state.value.filter(restaurant => restaurant.isNew === true);\n          break;\n        case \"mostPopular\":\n          state.value = data.restaurants;\n          state.value = state.value.filter(restaurant => restaurant.isPopular === true);\n          break;\n        case \"openNow\":\n          state.value = data.restaurants;\n          state.value = state.value.filter(restaurant => restaurant.isOpen === true);\n          break;\n        case \"mapView\":\n          state.value = data.restaurants;\n          state.value = state.value.filter(restaurant => restaurant.isNew === true);\n          break;\n        default:\n          state.value = state.value;\n      }\n    }\n  }\n});\nexport const {\n  restaurantPageFilter\n} = restaurantsSlice.actions;\nexport default restaurantsSlice.reducer;","map":{"version":3,"names":["createSlice","fetch","then","response","json","data","console","log","restaurantsSlice","name","initialState","value","reducers","restaurantPageFilter","state","action","filterType","payload","restaurants","filter","restaurant","isNew","isPopular","isOpen","actions","reducer"],"sources":["C:/Users/ROTEM/Desktop/Course Fullstack/exercises/final project/Epicure/front/src/store/slices/restaurantsSlice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n// import data from \"../../epicure.json\"\r\n\r\nfetch(\"http://localhost:8000/epicure\")\r\n.then((response) => response.json())\r\n.then((data) => {\r\n  console.log(data)\r\n});\r\n\r\nexport const restaurantsSlice = createSlice({\r\n  name: \"restaurants\",\r\n  initialState: {\r\n    value: data,\r\n  },\r\n  reducers: {\r\n    restaurantPageFilter: (state, action) => {\r\n    const filterType = action.payload;\r\n      switch (filterType){\r\n        case \"all\":\r\n            state.value = data.restaurants \r\n            break;\r\n        case \"new\":\r\n            state.value = data.restaurants \r\n            state.value = state.value.filter(\r\n                (restaurant) => restaurant.isNew === true); \r\n            break;\r\n        case \"mostPopular\":\r\n            state.value = data.restaurants \r\n            state.value = state.value.filter(\r\n                (restaurant) => restaurant.isPopular === true); \r\n            break;\r\n        case \"openNow\":\r\n            state.value = data.restaurants \r\n            state.value = state.value.filter(\r\n                (restaurant) => restaurant.isOpen === true); \r\n            break;\r\n        case \"mapView\":\r\n            state.value = data.restaurants \r\n            state.value = state.value.filter(\r\n                (restaurant) => restaurant.isNew === true); \r\n            break;\r\n        \r\n        default:\r\n        state.value = state.value;\r\n      }\r\n    }\r\n}\r\n})\r\n\r\nexport const { restaurantPageFilter } = restaurantsSlice.actions;\r\nexport default restaurantsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C;;AAEAC,KAAK,CAAC,+BAA+B,CAAC,CACrCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;EACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;AACnB,CAAC,CAAC;AAEF,OAAO,MAAMG,gBAAgB,GAAGR,WAAW,CAAC;EAC1CS,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACZC,KAAK,EAAEN;EACT,CAAC;EACDO,QAAQ,EAAE;IACRC,oBAAoB,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACzC,MAAMC,UAAU,GAAGD,MAAM,CAACE,OAAO;MAC/B,QAAQD,UAAU;QAChB,KAAK,KAAK;UACNF,KAAK,CAACH,KAAK,GAAGN,IAAI,CAACa,WAAW;UAC9B;QACJ,KAAK,KAAK;UACNJ,KAAK,CAACH,KAAK,GAAGN,IAAI,CAACa,WAAW;UAC9BJ,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,CAACQ,MAAM,CAC3BC,UAAU,IAAKA,UAAU,CAACC,KAAK,KAAK,IAAI,CAAC;UAC9C;QACJ,KAAK,aAAa;UACdP,KAAK,CAACH,KAAK,GAAGN,IAAI,CAACa,WAAW;UAC9BJ,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,CAACQ,MAAM,CAC3BC,UAAU,IAAKA,UAAU,CAACE,SAAS,KAAK,IAAI,CAAC;UAClD;QACJ,KAAK,SAAS;UACVR,KAAK,CAACH,KAAK,GAAGN,IAAI,CAACa,WAAW;UAC9BJ,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,CAACQ,MAAM,CAC3BC,UAAU,IAAKA,UAAU,CAACG,MAAM,KAAK,IAAI,CAAC;UAC/C;QACJ,KAAK,SAAS;UACVT,KAAK,CAACH,KAAK,GAAGN,IAAI,CAACa,WAAW;UAC9BJ,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,CAACQ,MAAM,CAC3BC,UAAU,IAAKA,UAAU,CAACC,KAAK,KAAK,IAAI,CAAC;UAC9C;QAEJ;UACAP,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK;MAAC;IAE9B;EACJ;AACA,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE;AAAqB,CAAC,GAAGL,gBAAgB,CAACgB,OAAO;AAChE,eAAehB,gBAAgB,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}