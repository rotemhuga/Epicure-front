{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROTEM\\\\Desktop\\\\Course Fullstack\\\\exercises\\\\final project\\\\Epicure\\\\front\\\\src\\\\component\\\\SignUpPage\\\\SignUpPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport \"./SignUpPage.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUpPage = () => {\n  _s();\n  const [allUserInputs, setAllUserInputs] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    emailAddress: \"\",\n    shippingAddress: \"\",\n    password: \"\"\n  });\n  useEffect(() => {\n    const postUserInputs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/epicure/signup/users\", {\n          method: \"POST\",\n          body: JSON.stringify(allUserInputs),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n          }\n        });\n        const data = await response.json();\n        console.log(data);\n      } catch (error) {\n        console.log(error.message);\n        // Handle error (e.g. show error message to user)\n      }\n    };\n\n    postUserInputs();\n  }, [allUserInputs]);\n  const handleInputChange = event => {\n    event.preventDefault();\n    const {\n      name,\n      value\n    } = event.currentTarget;\n    setAllUserInputs(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  useEffect(() => {\n    console.log(allUserInputs);\n  }, [allUserInputs]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"firstName\",\n      value: allUserInputs.firstName,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"lastName\",\n      value: allUserInputs.lastName,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"emailAddress\",\n      value: allUserInputs.emailAddress,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"shippingAddress\",\n      value: allUserInputs.shippingAddress,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\",\n      value: allUserInputs.password,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n};\n\n// const SignUpPage = (data:any) => {\n//     const [allUserInputs, setAllUserInputs] = useState({\n//         firstName: \"\",\n//         lastName: \"\",\n//         emailAddress: \"\",\n//         shippingAddress: \"\",\n//         password: \"\",\n//     })\n\n//     useEffect(()=> {\n//         // count ++\n//         // if(count>1)\n//         console.log(\"use effect happend\");\n//         console.log(allUserInputs);\n\n//      fetch(\"http://localhost:8000/epicure/signup/users\", {\n//             method: 'POST',\n//             body: JSON.stringify(allUserInputs),\n//             headers: {\n//             'Content-type': 'application/json; charset=UTF-8',\n//                 },\n//             })\n//             .then ((response) => {\n//             return response.json()\n//             }) \n//             .then ((data) => {\n//                 return data;\n//             }) \n//             .catch((error)=> {\n//                 console.log(error.massage);\n//             })\n//     },[allUserInputs])\n\n//     const handleInputChange = async (event:any) => {\n//         event.preventDefault()\n//             console.log(event)        \n//             setAllUserInputs({\n//             firstName:  event.target[0].value,\n//             lastName: event.target[1].value,\n//             emailAddress: event.target[2].value,\n//             shippingAddress: event.target[3].value,\n//             password: event.target[4].value,\n//         }) \n//         console.log(allUserInputs)      \n// fetch(\"http://localhost:8000/epicure/signup/users\", {\n//     method: 'POST',\n//     body: JSON.stringify(allUserInputs),\n//     headers: {\n//     'Content-type': 'application/json; charset=UTF-8',\n//         },\n//     })\n//     .then ((response) => {\n//     return response.json()\n//     }) \n//     .then ((data) => {\n//         return data;\n//     })\n//     .catch((error)=> {\n//         console.log(error.massage);\n//     }) \n\n//     const [emailError, setEmailError] = useState('')\n//     const validateEmail = (e:any) => {\n//     const email = e.target.value\n//     if (validator.isEmail(email)) {\n//     setEmailError('Valid Email')\n//     } else {\n//     setEmailError('Enter valid Email!')\n//     }\n// }\n\n// function userInputsFunc() {\n\n//  return (\n//     <>\n//     <div>\n//         <Navbar />\n//     </div>\n//     <form className=\"Sign-in-container\" onSubmit={handleInputChange}>\n//         <div className=\"sign-in-title\">SIGN UP</div>\n//         <div className=\"sign-in-sub-title\">To conitnue order, please sign in</div>\n//         <div className=\"names-container\">\n//             <div className=\"first-name-container\">\n//                 <input type=\"text\" className=\"user-first-name\" placeholder={\"First Name\"}/>\n//             </div>\n//             <div className=\"last-name-container\">\n//                 <input type=\"text\" className=\"user-last-name\" placeholder={\"Last Name\"}/>\n//             </div>\n//         </div>\n//         <div>\n//             <div className=\"email-container\">\n//                 <input type=\"text\" className=\"user-email\" placeholder={\"Email Adress\"}\n//                     // onChange={(e) => validateEmail(e)}\n//                     >\n//                 </input>\n//                     {/* {emailError} */}\n//             </div>\n//         </div>\n//         <div>\n//             <div className=\"address-container\">\n//                 <input type=\"text\" className=\"user-address\" placeholder=\"Shipping Address\"/>\n//             </div>\n//         </div>\n//         <div>\n//             <div className=\"password-container\">\n//                 <input type=\"text\" className=\"user-password\" placeholder={\"Password\"}/>\n//             </div>\n//         </div>\n//         {/* <div>\n//             <div className=\"password-confirm-container\">\n//                 <input type=\"text\" className=\"user-password\" placeholder={\"Confirm Password\"}/>\n//             </div>\n//         </div> */}\n//         <div className=\"sign-up-container\">\n//             {/* <button type=\"submit\" className=\"sign-up-button\" onClick={userInput}>SIGN UP</button> */}\n//             <button type=\"submit\" className=\"sign-up-button\">SIGN UP</button>\n//         </div>\n//     </form>\n//     </>\n//  )   \n//     }\n_s(SignUpPage, \"B9b0Yyv3iAWtr7ACx64z+9nNXuY=\");\n_c = SignUpPage;\nexport default SignUpPage;\nvar _c;\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"names":["React","useEffect","useState","SignUpPage","allUserInputs","setAllUserInputs","firstName","lastName","emailAddress","shippingAddress","password","postUserInputs","response","fetch","method","body","JSON","stringify","headers","data","json","console","log","error","message","handleInputChange","event","preventDefault","name","value","currentTarget","prevState"],"sources":["C:/Users/ROTEM/Desktop/Course Fullstack/exercises/final project/Epicure/front/src/component/SignUpPage/SignUpPage.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./SignUpPage.css\";\r\nimport validator from 'validator';\r\nimport PasswordChecklist from \"react-password-checklist\"\r\nimport { useState } from \"react\";\r\nimport Navbar from \"../navbar/all_navbar/navbar\";\r\n\r\nconst SignUpPage = () => {\r\n    const [allUserInputs, setAllUserInputs] = useState({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      emailAddress: \"\",\r\n      shippingAddress: \"\",\r\n      password: \"\",\r\n    });\r\n  \r\n    useEffect(() => {\r\n      const postUserInputs = async () => {\r\n        try {\r\n          const response = await fetch(\r\n            \"http://localhost:8000/epicure/signup/users\",\r\n            {\r\n              method: \"POST\",\r\n              body: JSON.stringify(allUserInputs),\r\n              headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\",\r\n              },\r\n            }\r\n          );\r\n          const data = await response.json();\r\n          console.log(data);\r\n        } catch (error:any) {\r\n          console.log(error.message);\r\n          // Handle error (e.g. show error message to user)\r\n        }\r\n      };\r\n  \r\n      postUserInputs();\r\n    }, [allUserInputs]);\r\n  \r\n    const handleInputChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n      event.preventDefault();\r\n      const { name, value } = event.currentTarget;\r\n      setAllUserInputs((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    };\r\n  \r\n    useEffect(() => {\r\n      console.log(allUserInputs);\r\n    }, [allUserInputs]);\r\n  \r\n    return (\r\n      <form>\r\n        <input name=\"firstName\" value={allUserInputs.firstName} onChange={handleInputChange} />\r\n        <input name=\"lastName\" value={allUserInputs.lastName} onChange={handleInputChange} />\r\n        <input name=\"emailAddress\" value={allUserInputs.emailAddress} onChange={handleInputChange} />\r\n        <input name=\"shippingAddress\" value={allUserInputs.shippingAddress} onChange={handleInputChange} />\r\n        <input name=\"password\" value={allUserInputs.password} onChange={handleInputChange} />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    );\r\n  };\r\n\r\n// const SignUpPage = (data:any) => {\r\n//     const [allUserInputs, setAllUserInputs] = useState({\r\n//         firstName: \"\",\r\n//         lastName: \"\",\r\n//         emailAddress: \"\",\r\n//         shippingAddress: \"\",\r\n//         password: \"\",\r\n//     })\r\n\r\n//     useEffect(()=> {\r\n//         // count ++\r\n//         // if(count>1)\r\n//         console.log(\"use effect happend\");\r\n//         console.log(allUserInputs);\r\n\r\n//      fetch(\"http://localhost:8000/epicure/signup/users\", {\r\n//             method: 'POST',\r\n//             body: JSON.stringify(allUserInputs),\r\n//             headers: {\r\n//             'Content-type': 'application/json; charset=UTF-8',\r\n//                 },\r\n//             })\r\n//             .then ((response) => {\r\n//             return response.json()\r\n//             }) \r\n//             .then ((data) => {\r\n//                 return data;\r\n//             }) \r\n//             .catch((error)=> {\r\n//                 console.log(error.massage);\r\n//             })\r\n//     },[allUserInputs])\r\n    \r\n//     const handleInputChange = async (event:any) => {\r\n//         event.preventDefault()\r\n//             console.log(event)        \r\n//             setAllUserInputs({\r\n//             firstName:  event.target[0].value,\r\n//             lastName: event.target[1].value,\r\n//             emailAddress: event.target[2].value,\r\n//             shippingAddress: event.target[3].value,\r\n//             password: event.target[4].value,\r\n//         }) \r\n//         console.log(allUserInputs)      \r\n        // fetch(\"http://localhost:8000/epicure/signup/users\", {\r\n        //     method: 'POST',\r\n        //     body: JSON.stringify(allUserInputs),\r\n        //     headers: {\r\n        //     'Content-type': 'application/json; charset=UTF-8',\r\n        //         },\r\n        //     })\r\n        //     .then ((response) => {\r\n        //     return response.json()\r\n        //     }) \r\n        //     .then ((data) => {\r\n        //         return data;\r\n        //     })\r\n        //     .catch((error)=> {\r\n        //         console.log(error.massage);\r\n        //     }) \r\n      \r\n        \r\n    //     const [emailError, setEmailError] = useState('')\r\n    //     const validateEmail = (e:any) => {\r\n    //     const email = e.target.value\r\n    //     if (validator.isEmail(email)) {\r\n    //     setEmailError('Valid Email')\r\n    //     } else {\r\n    //     setEmailError('Enter valid Email!')\r\n    //     }\r\n    // }\r\n    \r\n// function userInputsFunc() {\r\n\r\n//  return (\r\n//     <>\r\n//     <div>\r\n//         <Navbar />\r\n//     </div>\r\n//     <form className=\"Sign-in-container\" onSubmit={handleInputChange}>\r\n//         <div className=\"sign-in-title\">SIGN UP</div>\r\n//         <div className=\"sign-in-sub-title\">To conitnue order, please sign in</div>\r\n//         <div className=\"names-container\">\r\n//             <div className=\"first-name-container\">\r\n//                 <input type=\"text\" className=\"user-first-name\" placeholder={\"First Name\"}/>\r\n//             </div>\r\n//             <div className=\"last-name-container\">\r\n//                 <input type=\"text\" className=\"user-last-name\" placeholder={\"Last Name\"}/>\r\n//             </div>\r\n//         </div>\r\n//         <div>\r\n//             <div className=\"email-container\">\r\n//                 <input type=\"text\" className=\"user-email\" placeholder={\"Email Adress\"}\r\n//                     // onChange={(e) => validateEmail(e)}\r\n//                     >\r\n//                 </input>\r\n//                     {/* {emailError} */}\r\n//             </div>\r\n//         </div>\r\n//         <div>\r\n//             <div className=\"address-container\">\r\n//                 <input type=\"text\" className=\"user-address\" placeholder=\"Shipping Address\"/>\r\n//             </div>\r\n//         </div>\r\n//         <div>\r\n//             <div className=\"password-container\">\r\n//                 <input type=\"text\" className=\"user-password\" placeholder={\"Password\"}/>\r\n//             </div>\r\n//         </div>\r\n//         {/* <div>\r\n//             <div className=\"password-confirm-container\">\r\n//                 <input type=\"text\" className=\"user-password\" placeholder={\"Confirm Password\"}/>\r\n//             </div>\r\n//         </div> */}\r\n//         <div className=\"sign-up-container\">\r\n//             {/* <button type=\"submit\" className=\"sign-up-button\" onClick={userInput}>SIGN UP</button> */}\r\n//             <button type=\"submit\" className=\"sign-up-button\">SIGN UP</button>\r\n//         </div>\r\n//     </form>\r\n//     </>\r\n//  )   \r\n//     }\r\nexport default SignUpPage \r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,kBAAkB;AAGzB,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAGjC,MAAMC,UAAU,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGH,QAAQ,CAAC;IACjDI,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,eAAe,EAAE,EAAE;IACnBC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEFT,SAAS,CAAC,MAAM;IACd,MAAMU,cAAc,GAAG,YAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4CAA4C,EAC5C;UACEC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,aAAa,CAAC;UACnCc,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CACF;QACD,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOI,KAAS,EAAE;QAClBF,OAAO,CAACC,GAAG,CAACC,KAAK,CAACC,OAAO,CAAC;QAC1B;MACF;IACF,CAAC;;IAEDb,cAAc,EAAE;EAClB,CAAC,EAAE,CAACP,aAAa,CAAC,CAAC;EAEnB,MAAMqB,iBAAiB,GAAIC,KAAwC,IAAK;IACtEA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGH,KAAK,CAACI,aAAa;IAC3CzB,gBAAgB,CAAE0B,SAAS,KAAM;MAC/B,GAAGA,SAAS;MACZ,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED5B,SAAS,CAAC,MAAM;IACdoB,OAAO,CAACC,GAAG,CAAClB,aAAa,CAAC;EAC5B,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,oBACE;IAAA,wBACE;MAAO,IAAI,EAAC,WAAW;MAAC,KAAK,EAAEA,aAAa,CAACE,SAAU;MAAC,QAAQ,EAAEmB;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAG,eACvF;MAAO,IAAI,EAAC,UAAU;MAAC,KAAK,EAAErB,aAAa,CAACG,QAAS;MAAC,QAAQ,EAAEkB;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAG,eACrF;MAAO,IAAI,EAAC,cAAc;MAAC,KAAK,EAAErB,aAAa,CAACI,YAAa;MAAC,QAAQ,EAAEiB;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAG,eAC7F;MAAO,IAAI,EAAC,iBAAiB;MAAC,KAAK,EAAErB,aAAa,CAACK,eAAgB;MAAC,QAAQ,EAAEgB;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAG,eACnG;MAAO,IAAI,EAAC,UAAU;MAAC,KAAK,EAAErB,aAAa,CAACM,QAAS;MAAC,QAAQ,EAAEe;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAG,eACrF;MAAQ,IAAI,EAAC,QAAQ;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAChC;AAEX,CAAC;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,GAnLMtB,UAAU;AAAA,KAAVA,UAAU;AAoLhB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}