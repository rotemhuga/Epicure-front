{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/ROTEM/Desktop/Course Fullstack/exercises/final project/Epicure/front/src/store/slices/restaurantsSlice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// export const restaurantsSlice = createSlice({\r\n//   name: \"restaurants\",\r\n//   initialState: { value: [] },\r\n//   reducers: {\r\n//     // setRestaurants: (state, action) => {\r\n//     //   state.restaurants = action.payload;\r\n//     // },\r\n//     restaurantPageFilter: async (state, action) => {\r\n//       try {\r\n//         const response = await fetch(\"http://localhost:8000/epicure\");\r\n//         const dataRest = await response.json();\r\n//         console.log(dataRest)\r\n//         state.value = dataRest\r\n//         let filterType = action.payload;\r\n//         switch (action.payload) {\r\n//           case \"all\":\r\n//             break;\r\n//           case \"new\":\r\n//             filterType = filterType.filter(\r\n//               (restaurant:any) => restaurant.isNew === true\r\n//             );\r\n//             break;\r\n//           case \"mostPopular\":\r\n//             filterType = filterType.filter(\r\n//               (restaurant:any) => restaurant.isPopular === true\r\n//             );\r\n//             break;\r\n//           case \"openNow\":\r\n//             filterType = filterType.filter(\r\n//               (restaurant:any) => restaurant.isOpen === true\r\n//             );\r\n//             break;\r\n//           case \"mapView\":\r\n//             filterType = filterType.filter(\r\n//               (restaurant:any) => restaurant.isNew === true\r\n//             );\r\n//             break;\r\n//           default:\r\n//             break;\r\n//         }\r\n//         state.restaurants = filterType;\r\n//       } catch (error) {\r\n//         console.log(error);\r\n//       }\r\n//     },\r\n//   },\r\n// });\r\n\r\n// export default restaurantsSlice.reducer;\r\n\r\n\r\n// export const { setRestaurants, restaurantPageFilter } = restaurantsSlice.actions;\r\n\r\n// fetch(\"http://localhost:8000/epicure\")\r\n// .then((response) => response.json())\r\n// .then((data) => {\r\n//   console.log(data)\r\n//   // setStudents(data.studentsData);\r\n// });\r\n\r\n// export const restaurantsSlice = createSlice({\r\n//   name: \"restaurants\",\r\n//   initialState: { restaurants: [] },\r\n//   reducers: {\r\n//     setRestaurants: (state, action) => {\r\n//         state.restaurants = action.payload;\r\n//         // switch (state.restaurants){\r\n//         //     case \"all\":\r\n//         //         state.value = data.restaurants \r\n//         //         break;\r\n//         //     case \"new\":\r\n//         //         state.value = data.restaurants \r\n//         //         state.value = state.value.filter(\r\n//         //             (restaurant) => restaurant.isNew === true); \r\n//         //         break;\r\n//         //     case \"mostPopular\":\r\n//         //         state.value = data.restaurants \r\n//         //         state.value = state.value.filter(\r\n//         //             (restaurant) => restaurant.isPopular === true); \r\n//         //         break;\r\n//         //     case \"openNow\":\r\n//         //         state.value = data.restaurants \r\n//         //         state.value = state.value.filter(\r\n//         //             (restaurant) => restaurant.isOpen === true); \r\n//         //         break;\r\n//         //     case \"mapView\":\r\n//         //         state.value = data.restaurants \r\n//         //         state.value = state.value.filter(\r\n//         //             (restaurant) => restaurant.isNew === true); \r\n//         //         break;\r\n            \r\n//         //     default:\r\n//         //     state.value = state.value;\r\n//         //   }\r\n//       }\r\n//     }\r\n//   });\r\n\r\n\r\n\r\n// export default restaurantsSlice.reducer;\r\n\r\n// export const restaurantsSlice = createSlice({\r\n//   name: \"restaurants\",\r\n//   initialState: {\r\n//     value: data.restaurants,\r\n//   },\r\n//   reducers: {\r\n//     restaurantPageFilter: (state, action) => {\r\n//     const filterType = action.payload;\r\n//       switch (filterType){\r\n//         case \"all\":\r\n//             state.value = data.restaurants \r\n//             break;\r\n//         case \"new\":\r\n//             state.value = data.restaurants \r\n//             state.value = state.value.filter(\r\n//                 (restaurant) => restaurant.isNew === true); \r\n//             break;\r\n//         case \"mostPopular\":\r\n//             state.value = data.restaurants \r\n//             state.value = state.value.filter(\r\n//                 (restaurant) => restaurant.isPopular === true); \r\n//             break;\r\n//         case \"openNow\":\r\n//             state.value = data.restaurants \r\n//             state.value = state.value.filter(\r\n//                 (restaurant) => restaurant.isOpen === true); \r\n//             break;\r\n//         case \"mapView\":\r\n//             state.value = data.restaurants \r\n//             state.value = state.value.filter(\r\n//                 (restaurant) => restaurant.isNew === true); \r\n//             break;\r\n        \r\n//         default:\r\n//         state.value = state.value;\r\n//       }\r\n//     }\r\n// }\r\n// })\r\n\r\n// export const { restaurantPageFilter } = restaurantsSlice.actions;\r\n// export default restaurantsSlice.reducer;\r\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}