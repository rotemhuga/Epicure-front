[{"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\index.tsx":"1","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\reportWebVitals.ts":"2","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\App.tsx":"3","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\store\\store.ts":"4","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\HomePage\\HomePage.tsx":"5","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\RestaurantsPage\\RestaurantsPage.tsx":"6","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\OneRestPage\\OneRestPage.tsx":"7","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\ChefsPage\\ChefsPage.tsx":"8","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\SignUpPage\\SignUpPage.tsx":"9","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\SignInPage\\SignInPage.tsx":"10","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\store\\slices\\dishesSlice.tsx":"11","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\store\\slices\\restaurantsSlice.tsx":"12","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\store\\slices\\chefsSlice.tsx":"13","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\All_restaurants\\All_restaurants.tsx":"14","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\Signature_dish\\Signature_dish.tsx":"15","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\All_chefs\\All_chefs.tsx":"16","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\Hero\\Hero.tsx":"17","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\navbar\\all_navbar\\navbar.tsx":"18","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\About_us\\About_us.tsx":"19","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\Icon_meaning\\Icon_meaning.tsx":"20","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\Week_chef\\Week_chef.tsx":"21","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\Rest_filter_link\\Rest_filter_link.tsx":"22","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\Footer\\Footer.tsx":"23","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\Popular_restaurant\\Popular_restaurant.tsx":"24","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\Filter_chef_page\\Filter_chef_page.tsx":"25","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\One_rest_details\\One_rest_details.tsx":"26","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\Filter_rest_options\\Filter_rest_options.tsx":"27","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\Card_restaurant\\Card_restaurant.tsx":"28","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\Card_all_chef\\Card_all_chef.tsx":"29","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\Card_dish\\Card_dish.tsx":"30","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\Card_week_chef\\Card_week_chef.tsx":"31","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\Card_dish_modal\\Card_dish_modal.tsx":"32","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\navbar\\Bag_Nav\\BagNav.tsx":"33","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\NavButton_nav\\NavButton.tsx":"34","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\Navlink_button\\Navlink_button.tsx":"35","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\navbar\\Search_nav\\SearchNav.tsx":"36"},{"size":669,"mtime":1677322441946,"results":"37","hashOfConfig":"38"},{"size":425,"mtime":1675774758520,"results":"39","hashOfConfig":"38"},{"size":979,"mtime":1679175384181,"results":"40","hashOfConfig":"38"},{"size":396,"mtime":1676902622417,"results":"41","hashOfConfig":"38"},{"size":877,"mtime":1679240974523,"results":"42","hashOfConfig":"38"},{"size":796,"mtime":1678799985171,"results":"43","hashOfConfig":"38"},{"size":495,"mtime":1677407113721,"results":"44","hashOfConfig":"38"},{"size":607,"mtime":1677407113689,"results":"45","hashOfConfig":"38"},{"size":3233,"mtime":1679350221174,"results":"46","hashOfConfig":"38"},{"size":2079,"mtime":1679175384206,"results":"47","hashOfConfig":"38"},{"size":1516,"mtime":1679328782407,"results":"48","hashOfConfig":"38"},{"size":1942,"mtime":1679326266118,"results":"49","hashOfConfig":"38"},{"size":1251,"mtime":1679258829291,"results":"50","hashOfConfig":"38"},{"size":1077,"mtime":1679175384188,"results":"51","hashOfConfig":"38"},{"size":1177,"mtime":1679240972446,"results":"52","hashOfConfig":"38"},{"size":781,"mtime":1679175384184,"results":"53","hashOfConfig":"38"},{"size":780,"mtime":1677322441884,"results":"54","hashOfConfig":"38"},{"size":1854,"mtime":1679175384218,"results":"55","hashOfConfig":"38"},{"size":1812,"mtime":1677407113697,"results":"56","hashOfConfig":"38"},{"size":1174,"mtime":1676902622301,"results":"57","hashOfConfig":"38"},{"size":1476,"mtime":1679175384203,"results":"58","hashOfConfig":"38"},{"size":2331,"mtime":1677407113713,"results":"59","hashOfConfig":"38"},{"size":429,"mtime":1676902622279,"results":"60","hashOfConfig":"38"},{"size":1551,"mtime":1677407113713,"results":"61","hashOfConfig":"38"},{"size":1659,"mtime":1677407113697,"results":"62","hashOfConfig":"38"},{"size":6341,"mtime":1679330469732,"results":"63","hashOfConfig":"38"},{"size":6179,"mtime":1679258822850,"results":"64","hashOfConfig":"38"},{"size":2260,"mtime":1679327073134,"results":"65","hashOfConfig":"38"},{"size":1302,"mtime":1679258794396,"results":"66","hashOfConfig":"38"},{"size":994,"mtime":1677407113681,"results":"67","hashOfConfig":"38"},{"size":1392,"mtime":1679174059406,"results":"68","hashOfConfig":"38"},{"size":3049,"mtime":1677763416211,"results":"69","hashOfConfig":"38"},{"size":238,"mtime":1676902622353,"results":"70","hashOfConfig":"38"},{"size":602,"mtime":1677409938897,"results":"71","hashOfConfig":"38"},{"size":540,"mtime":1677416117149,"results":"72","hashOfConfig":"38"},{"size":775,"mtime":1679175384214,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e4iauf",{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\index.tsx",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\reportWebVitals.ts",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\App.tsx",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\store\\store.ts",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\HomePage\\HomePage.tsx",["195","196","197","198","199"],[],"import React from \"react\";\r\nimport \"./HomePage.css\"\r\nimport Navbar from \"../navbar/all_navbar/navbar\";\r\nimport Hero from \"../General/Hero/Hero\";\r\nimport Icon_meaning from \"../General/Icon_meaning/Icon_meaning\";\r\nimport Week_chef from \"../General/Week_chef/Week_chef\";\r\nimport About_us from \"../General/About_us/About_us\";\r\nimport Footer from \"../General/Footer/Footer\";\r\nimport Popular_restaurant from \"../General/Popular_restaurant/Popular_restaurant\";\r\nimport Signature_dish from \"../Signature_dish/Signature_dish\";\r\n\r\nconst HomePage: React.FC = () => {\r\n    return (\r\n        <div id=\"Home-page\"> \r\n            <Navbar />\r\n            <Hero />\r\n            <Popular_restaurant />\r\n            <Signature_dish />\r\n            <Icon_meaning />\r\n            <Week_chef />\r\n            <About_us />\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage ","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\RestaurantsPage\\RestaurantsPage.tsx",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\OneRestPage\\OneRestPage.tsx",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\ChefsPage\\ChefsPage.tsx",["200"],[],"import React from \"react\";\r\nimport \"./ChefsPage.css\"\r\nimport Navbar from \"../navbar/all_navbar/navbar\";\r\nimport Footer from \"../General/Footer/Footer\";\r\nimport FilterChefPage from \"../General/Filter_chef_page/Filter_chef_page\"\r\nimport All_chefs from \"../All_chefs/All_chefs\"\r\n\r\nconst ChefsPage: React.FC = () => {\r\n    return (\r\n        <div id=\"chefs-page\">\r\n            <Navbar />\r\n            <div className=\"chef-title\">\r\n                CHEFS\r\n            </div>\r\n            <FilterChefPage />\r\n            <All_chefs />\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChefsPage ","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\SignUpPage\\SignUpPage.tsx",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\SignInPage\\SignInPage.tsx",["201","202"],[],"import React from \"react\";\r\nimport \"./SignInPage.css\";\r\nimport validator from 'validator';\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport Navbar from \"../navbar/all_navbar/navbar\";\r\n\r\nconst SignInPage:React.FC = () => {\r\n        const navigate = useNavigate();\r\n        const [emailError, setEmailError] = useState('')\r\n        const [password, setPassword] = useState(\"\")\r\n        const validateEmail = (e:any) => {\r\n        const email = e.target.value\r\n        if (validator.isEmail(email)) {\r\n        setEmailError('Valid Email')\r\n        } else {\r\n        setEmailError('Enter valid Email!')\r\n        }\r\n    }\r\n return (\r\n    <>\r\n    <div>\r\n    <Navbar />\r\n    </div> \r\n    <div className=\"Sign-in-container\">\r\n        <div className=\"sign-in-title\">SIGN IN</div>\r\n        <div className=\"sign-in-sub-title\">To conitnue order, please sign in</div>\r\n        <div>\r\n            <div className=\"email-container\">\r\n                <input type=\"text\" className=\"user-email\" placeholder={\"Email Adress\"}\r\n                    onChange={(e) => validateEmail(e)}></input>\r\n                    {emailError}\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div className=\"password-container\">\r\n                <input type=\"text\" className=\"user-password\" placeholder={\"Password\"}/>\r\n            </div>\r\n        </div>\r\n        <div className=\"log-in-container\">\r\n            <button className=\"log-in-button\">LOGIN</button>\r\n        </div>\r\n        <div className=\"forget-password-container\">\r\n            <button className=\"forget-password\">Forget password?</button>\r\n        </div>\r\n        <div className=\"or-option-container\">\r\n            <hr className=\"hr-or-left\" />\r\n            <p className=\"or-text\">or</p>\r\n            <hr className=\"hr-or-right\" />\r\n        </div>\r\n        <div className=\"sign-up-container\">\r\n            <button className=\"sign-up-button\" onClick={() => {navigate(\"/SignUp\");window.scrollTo(0, 0);}}>SIGN UP</button>\r\n        </div>\r\n    </div>\r\n    </>\r\n )   \r\n}\r\nexport default SignInPage \r\n\r\n\r\n","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\store\\slices\\dishesSlice.tsx",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\store\\slices\\restaurantsSlice.tsx",["203"],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\store\\slices\\chefsSlice.tsx",["204"],[],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { IchefsValue } from \"../../interfaces\";\r\n\r\nconst getChefsData = fetch(\"http://localhost:8000/epicure/chefsPage\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((err:any) => {\r\n        console.log(err.message);\r\n    });\r\n\r\nconst chef:any = await getChefsData;\r\n\r\nexport const chefsSlice = createSlice({\r\n  name: \"chefs\",\r\n  initialState: {\r\n    value: chef,\r\n  },\r\n  reducers: {\r\n    chefsPageFilter: (state,action) => {\r\n      const chefFilterType = action.payload;\r\n        switch (chefFilterType){\r\n          case \"all\":\r\n            state.value = chef\r\n            break;\r\n          case \"new\":\r\n            state.value = chef\r\n            state.value = state.value.filter(\r\n              (chef:IchefsValue) => chef.isNew === true);\r\n            break;\r\n          case \"mostViewed\":\r\n            state.value = chef\r\n            state.value = state.value.filter(\r\n              (chef:IchefsValue) => chef.mostViewed === true);\r\n            break;\r\n\r\n          default:\r\n          state.value = state.value;\r\n        }\r\n      }\r\n  }\r\n});\r\n\r\nexport const { chefsPageFilter } = chefsSlice.actions;\r\nexport default chefsSlice.reducer;\r\n\r\n","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\All_restaurants\\All_restaurants.tsx",["205"],[],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CardRestaurant from \"../Card_restaurant/Card_restaurant\";\r\nimport \"./All_restaurants.css\";\r\nimport { IrestaurantsValue, IRootState } from \"../../interfaces\"\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst AllRestaurants: React.FC = () => {\r\nconst navigate = useNavigate();\r\n\r\nconst restaurants = useSelector(\r\n        (state:IRootState) => state.restaurants.value\r\n);\r\nconst rests = restaurants.map((rest:IrestaurantsValue) => {\r\n        return <CardRestaurant \r\n        class= {rest.name}\r\n        id = {rest.id}\r\n        src= {require(`../../assets/images/Restaurants/${rest.img}.png`)}\r\n        restaurantName = {rest.name}\r\n        chef = {rest.chef}\r\n        rating = {require(`../../assets/icons/star${rest.rating}.svg`)} \r\n        key = {rest.id}\r\n        />  \r\n})\r\n    return (\r\n        <div className=\"rest-page\" >\r\n            <div id=\"all-rest-page-container\">\r\n                {rests}\r\n            </div>\r\n        </div>\r\n    ) \r\n}    \r\n\r\nexport default AllRestaurants\r\n\r\n\r\n","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\Signature_dish\\Signature_dish.tsx",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\All_chefs\\All_chefs.tsx",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\Hero\\Hero.tsx",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\navbar\\all_navbar\\navbar.tsx",["206","207"],[],"import React from \"react\";\r\nimport './navbar.css';\r\nimport NavButton from \"../../General/NavButton_nav/NavButton\";\r\nimport Navlink_button from \"../../General/Navlink_button/Navlink_button\"\r\nimport SearchNav from \"../Search_nav/SearchNav\";\r\nimport propfileIcon from '../../../assets/icons/profile.svg';\r\nimport BagNav from \"../Bag_Nav/BagNav\";\r\nimport logoName from '../../../assets/icons/epicure-logo-name.svg';\r\nimport logoIcon from \"../../../assets/icons/epicure-logo-icon.svg\";\r\nimport burgerIcon from \"../../../assets/icons/burger-icon.svg\"\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst Navbar: React.FC = () => {\r\n    const navigate = useNavigate();\r\n    return (\r\n        \r\n        <div id=\"all-navbar\">\r\n            <div className=\"left-nav navbar\">\r\n                <div className=\"left-nav-stay navbar\">\r\n                    <NavButton name = \"\" src={logoIcon} class=\"logo-icon\" onClick={() => navigate(\"/\")} />\r\n                </div>\r\n                <div className=\"left-nav-hidden navbar\">\r\n                    <NavButton name = \"\" src={logoName} class=\"logo-name\" onClick={() => navigate(\"/\")} />\r\n                    <Navlink_button name={\"Restaurants\"} navigate=\"/RestaurantsPage\" />\r\n                    <Navlink_button name={\"chefs\"} navigate=\"/ChefsPage\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"nav-bar-sides\">\r\n                <button className=\"burger-icon\">\r\n                    <img src={burgerIcon} alt=\"burgr-icon\" />\r\n                </button>\r\n                <div className=\"right-nav navbar\">\r\n                    <SearchNav />\r\n                    <NavButton name = \"\" src={propfileIcon} class=\"logo-name\" onClick={() => navigate(\"/SignIn\")} />\r\n                    <BagNav />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar \r\n\r\n","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\About_us\\About_us.tsx",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\Icon_meaning\\Icon_meaning.tsx",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\Week_chef\\Week_chef.tsx",["208"],[],"import React from \"react\";\r\nimport \"../Week_chef/Week_chef.css\"\r\nimport CardWeekChef from \"../../Card_week_chef/Card_week_chef\"\r\nimport { IchefsValue, IRootState, IrestaurantsValue} from \"../../../interfaces\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n \r\nconst Week_chef: React.FC = ()=> {\r\nconst chefs = useSelector(\r\n        (state:IRootState) => state.chefs.value\r\n    );  \r\nconst restaurants = useSelector(\r\n        (state:IRootState) => state.restaurants.value\r\n    );  \r\n    const items = chefs.map((item:IchefsValue) => {\r\n        const chefRest = item.restaurants\r\n        const choosen =  chefRest!.map((restid:string) => {\r\n            const choosenObj = restaurants.filter((restObj) => restObj.id === restid)[0]\r\n            return choosenObj\r\n        })\r\n        if (item.isChefOfTheWeek === true) { \r\n            return < CardWeekChef\r\n                class= {item.name}\r\n                srcChef= {require(`../../../assets/images/${item.portrait}.png`)}\r\n                ChefName = {item.name}\r\n                info = {item.info}\r\n                restTitle = {`${item.firstName}'s Restaurants`}\r\n                chefResturants = {choosen} \r\n                key = {item.id}\r\n            /> \r\n        } else {\r\n            return null;\r\n        }   \r\n    })\r\n    return (\r\n        <div id=\"week-chef-container\">\r\n            <div id=\"week-chef-title\">CHEF OF THE WEEK:</div>\r\n                {items}\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default Week_chef\r\n\r\n\r\n","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\Rest_filter_link\\Rest_filter_link.tsx",["209","210"],[],"import React from \"react\";\r\nimport \"./Rest_filter_link.css\"\r\nimport { useState } from \"react\";\r\nimport NavButton from \"../NavButton_nav/NavButton\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IRootState } from \"../../../interfaces\";\r\nimport {\r\n    restaurantPageFilter\r\n  } from \"../../../store/slices/restaurantsSlice\"\r\n\r\nconst RestFilterLink: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const restFilter = useSelector((state: IRootState) => state.restaurants.value)\r\n    const [activeButton, setActiveButton] = useState (\"all\")\r\n    const [clicked, setClicked] = useState(\"\")\r\n    \r\n    const handleAllClick = () => {\r\n        dispatch(restaurantPageFilter(\"all\"));\r\n        setActiveButton(\"all\")\r\n        setClicked(\"all\")\r\n    }\r\n    const handleNewClick = () => {\r\n        dispatch(restaurantPageFilter(\"new\"));\r\n        setActiveButton(\"new\")\r\n        setClicked(\"new\")\r\n    }\r\n    const handleMostPopularClick = () => {\r\n        dispatch(restaurantPageFilter(\"mostPopular\"));\r\n        setActiveButton(\"mostPopular\")\r\n        setClicked(\"mostPopular\")\r\n    }\r\n    const handleOpenNowClick = () => {\r\n        dispatch(restaurantPageFilter(\"openNow\"));\r\n        setActiveButton(\"openNow\")\r\n        setClicked(\"openNow\")\r\n    }\r\n    const handleMapViewClick = () => {\r\n        dispatch(restaurantPageFilter(\"mapView\"));\r\n        setActiveButton(\"mapView\")\r\n        setClicked(\"mapView\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"all-buttons\">\r\n            <NavButton name={\"All\"} class=\"button-all-rest\"  onClick={(handleAllClick)} id={clicked === \"all\" ? \"clicked\" : \"not-clicked-rest\"} />\r\n            <NavButton name={\"New\"} class=\"button-new\" onClick={(handleNewClick)}  id={clicked === \"new\" ? \"clicked\" : \"not-clicked\"}/>\r\n            <NavButton name={\"Most Popular\"} class=\"button-most-popular\" onClick={(handleMostPopularClick)} id={clicked === \"mostPopular\" ? \"clicked\" : \"not-clicked\"}/>\r\n            <NavButton name={\"Open Now\"} class=\"button-open-now\" onClick={(handleOpenNowClick)} id={clicked === \"openNow\" ? \"clicked\" : \"not-clicked\"}/>\r\n            <NavButton name={\"Map View\"} class=\"button-map-view\" onClick={(handleMapViewClick)} id={clicked === \"mapView\" ? \"clicked-map-view\" : \"not-clicked-map-view\"}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RestFilterLink","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\Footer\\Footer.tsx",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\Popular_restaurant\\Popular_restaurant.tsx",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\Filter_chef_page\\Filter_chef_page.tsx",["211","212"],[],"import React from \"react\";\r\nimport \"./Filter_chef_page.css\"\r\nimport NavButton from \"../NavButton_nav/NavButton\";\r\nimport { useState } from \"react\";\r\nimport { useSelector , useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"../../../interfaces\";\r\nimport {\r\n    chefsPageFilter\r\n} from \"../../../store/slices/chefsSlice\"\r\n\r\nconst FilterChefPage: React.FC = () => {\r\n    const dispatch = useDispatch ()\r\n    const restFilter = useSelector((state: IRootState) => state.restaurants.value)\r\n    const [activeButton, setActiveButton] = useState(\"all\")\r\n    const [clicked, setClicked] = useState(\"\")\r\n\r\n    const handleAllClick = () => {\r\n        dispatch(chefsPageFilter(\"all\"));\r\n        setActiveButton(\"all\")\r\n        setClicked(\"all\")\r\n    }\r\n    const handleNewClick = () => {\r\n        dispatch(chefsPageFilter(\"new\"));\r\n        setActiveButton(\"new\")\r\n        setClicked(\"new\")\r\n    }\r\n    const handleMostViewedClick = () => {\r\n        dispatch(chefsPageFilter(\"mostViewed\"));\r\n        setActiveButton(\"mostViewed\")\r\n        setClicked(\"mostViewed\")\r\n    }\r\n\r\n        return (\r\n            <div className=\"all-buttons\">\r\n                <NavButton name={\"All\"} class=\"button-all-chefs\" onClick={handleAllClick} id= {clicked === \"all\" ? \"clicked\": \"not-clicked\"}/>\r\n                <NavButton name={\"New\"} class=\"button-new-chef\" onClick={handleNewClick} id= {clicked === \"new\" ? \"clicked\": \"not-clicked\"} />\r\n                <NavButton name={\"Most Viewed\"} class=\"button-most-viewed\" onClick={handleMostViewedClick} id= {clicked === \"mostViewed\" ? \"clicked\": \"not-clicked\"}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default FilterChefPage","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\One_rest_details\\One_rest_details.tsx",["213","214","215","216","217","218","219","220"],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\Filter_rest_options\\Filter_rest_options.tsx",["221"],[],"import React from \"react\";\r\nimport \"../Rest_filter_link/Rest_filter_link.css\"\r\nimport \"../Filter_rest_options/Filter_rest_options.css\"\r\nimport NavButton from \"../NavButton_nav/NavButton\";\r\nimport vectorDown from \"../../../assets/icons/Vector-filter-down.svg\"\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n  \r\nconst FilterRestOptions: React.FC = () => {\r\nconst navigate = useNavigate();\r\nconst [modal, setModal] = useState(false);\r\nconst [count, setCount] = useState(0);\r\n\r\nconst toggleModal = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const [addRestInputs, setAddRestInputs] = useState({\r\n    id: \"\",\r\n    img: \"\",\r\n    name: \"\",\r\n    chef: \"\",\r\n    rating: \"\",\r\n    openHour: \"\",\r\n    closeHour: \"\",\r\n    address:\"\",\r\n    dishes: [-1],\r\n    isPopular:false,\r\n    isNew:false,\r\n    isOpen:false,\r\n    map:false\r\n})\r\n\r\nconst handleAddRest = async (event:any) => {\r\n  event.preventDefault()\r\n  setAddRestInputs({\r\n    id: \"1\",\r\n    img: event.target[0].value,\r\n    name: event.target[1].value,\r\n    chef: event.target[2].value,\r\n    rating: event.target[3].value,\r\n    openHour: event.target[8].value,\r\n    closeHour: event.target[9].value,\r\n    address: event.target[10].value,\r\n    dishes: [1,4,6],\r\n    isPopular: true,\r\n    isNew: true,\r\n    isOpen: true,\r\n    map:false\r\n  })\r\n  setCount(prevCount => prevCount + 1);\r\n  window.location.href = \"http://localhost:8000/epicure/RestaurantsPage\";\r\n}\r\n\r\n  useEffect(()=> {\r\n    if (count >= 1) {\r\n      fetch(\"http://localhost:8000/epicure/RestaurantsPage\", {\r\n        method: 'POST',\r\n        body: JSON.stringify(addRestInputs),\r\n        headers: {\r\n          'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n      })\r\n      .then((response) => {\r\n        return response.json();\r\n      }) \r\n      .then((data) => {\r\n        return data;\r\n      }) \r\n      .catch((error)=> {\r\n        console.log(error.message);\r\n      });\r\n    }\r\n  }, [addRestInputs, count]);\r\n\r\nconst allRest = document.getElementById('all-rest-page-container')\r\n\r\n  if(modal) {\r\n    document.body.classList.add('active-modal')\r\n    allRest!.style.display = 'none';\r\n\r\n  } else {\r\n    document.body.classList.remove('active-modal')\r\n  }\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"all-buttons filter-options\">\r\n            <div className=\"button-filter left\">\r\n                <NavButton name={\"Price Range\"} class=\"button-all-rest\"/>\r\n                <img src={vectorDown} alt=\"vector\" className=\"vectorDown\" />\r\n            </div>\r\n            <div className=\"button-filter middle\">\r\n                <NavButton name={\"Distance\"} class=\"button-all-rest\"/>\r\n                <img src={vectorDown} alt=\"vector\" />\r\n            </div>\r\n            <div className=\"button-filter right\">\r\n                <NavButton name={\"Rating\"} class=\"button-all-rest\"/>\r\n                <img src={vectorDown} alt=\"vector\" />\r\n            </div>        \r\n            <button className=\"add-restaurant-button\" onClick={toggleModal}>\r\n                Add Restaurant\r\n            </button>\r\n        </div>\r\n        {modal && (\r\n        <div className=\"modal\">\r\n          <div onClick={toggleModal} className=\"overlay\"></div>\r\n          <div className=\"modal-content\">\r\n            <h2>Add New Restaurant</h2>\r\n            <form onSubmit={handleAddRest} >\r\n                <div className=\"inputs-content\" >\r\n                  <div className=\"img-div\">\r\n                  <select id=\"img-input\" name=\"img\">\r\n                  <option value=\"\">Please select an image</option>\r\n                    <option value=\"claro-1\">1</option>\r\n                    <option value=\"Lumina-2\">2</option>\r\n                    <option value=\"tiger-lily-3\">3</option>\r\n                    <option value=\"onza-4\">4</option>\r\n                    <option value=\"kitchen-market-5\">5</option>\r\n                    <option value=\"mashya-6\">6</option>\r\n                    <option value=\"kab-kem-7\">7</option>\r\n                    <option value=\"messa-8\">8</option>\r\n                    <option value=\"nitan-thai-9\">9</option>\r\n                    <option value=\"ya-pan\">10</option>\r\n                  </select>\r\n                  </div>\r\n                  <label><input type=\"text\" name=\"name\" id=\"\" placeholder=\"Restaurant Name\" className=\"input-add-rest\" /></label>                \r\n                  <label><input type=\"text\" name=\"chefName\" id=\"\" placeholder=\"Chef Name\" className=\"input-add-rest\" /></label>                \r\n                  Rating (Scale 1-5):\r\n                  <label><input type=\"text\" name=\"rating\" id=\"\" placeholder=\"Restaurant Rating\" className=\"input-add-rest\" /></label>                \r\n                  <h2>Open Hours:</h2>\r\n                  From:\r\n                  <input type=\"time\" id=\"appt\" name=\"appt\"\r\n                  min=\"01:00\" max=\"18:00\" required/>\r\n                  To:\r\n                  <input type=\"time\" id=\"appt\" name=\"appt\"\r\n                  min=\"01:00\" max=\"18:00\" required/>\r\n                  <label><input type=\"text\" name=\"chefName\" id=\"\" placeholder=\"Restaurant Address\" className=\"input-add-rest\" /></label> \r\n                  <label><input type=\"text\" name=\"DishesName\" id=\"\" placeholder=\"Restaurant Dishes\" className=\"input-add-rest\" /></label> \r\n                  Popular Restauarnt:\r\n                  <label><input type=\"radio\" name=\"isPopular\" id=\"\" value=\"yes\" /><span>Yes</span></label>                \r\n                  <label><input type=\"radio\" name=\"isPopular\" id=\"\" value=\"no\"/><span>No</span></label>                \r\n                  New Restauarnt:\r\n                  <label><input type=\"radio\" name=\"isNew\" id=\"\" value=\"yes\" /><span>Yes</span></label>                \r\n                  <label><input type=\"radio\" name=\"isNew\" id=\"\" value=\"no\" /><span>No</span></label>    \r\n                  <button type=\"submit\" id=\"button-add-rest\">Add Restaurant</button>\r\n                </div>\r\n            </form> \r\n            <button className=\"close-modal\" onClick={toggleModal} >\r\n            X\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FilterRestOptions\r\n\r\n","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\Card_restaurant\\Card_restaurant.tsx",["222"],[],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Card_restaurant.css\"\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\ninterface Iprops {\r\n    class?: string,\r\n    id?:string\r\n    src?: string,\r\n    alt?:string,\r\n    restaurantName?: string,\r\n    chef?:string,\r\n    rating?:string,\r\n    onClick?: any,\r\n    isOpen?: string,\r\n}\r\n\r\nconst CardRestaurant:React.FC<Iprops>  = (props:Iprops)=> {\r\nconst navigate = useNavigate()\r\nconsole.log(props.id)\r\nconst [restId, setrestId] = useState<string | undefined>()\r\nuseEffect (() => {\r\n  setrestId(props.id)\r\n},[restId])\r\n\r\nconst handleDeleteRest = async (event:any) => {\r\n    event.preventDefault()\r\n    const clickedRestaurant = event.target.id      \r\n    \r\n  fetch(\"http://localhost:8000/epicure/RestaurantsPage\", {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ restaurant: clickedRestaurant })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      window.location.reload()\r\n    })\r\n    .catch(error => console.error(error));\r\n\r\n  fetch(\"http://localhost:8000/epicure/DishesPage\", {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ restaurant: clickedRestaurant })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      window.location.reload()\r\n    })\r\n    .catch(error => console.error(error));\r\n  };\r\n\r\n    return (\r\n    <div className=\"card-rest-div\">\r\n        <button className={`card popular-rest all-rest`} id={`rest-card ${restId}`} onClick={() => {navigate(`/RestaurantsPage/${restId}`);window.scrollTo(0, 0);}} >\r\n            <img src={props.src} alt={props.alt} className=\"img-card R-popular R-all\"/>\r\n            <div className=\"name-popular-card\">{props.restaurantName} </div>\r\n            <div className=\"chef-popular-card\">{props.chef}</div>\r\n            <div className=\"rating-popular-div\">\r\n                <img src={props.rating} alt=\"\" className=\"rating-popular-card\" />\r\n            </div>\r\n        </button>\r\n        <button onClick={handleDeleteRest} id={props.restaurantName} className=\"close-button\" >X</button>\r\n    </div>\r\n   \r\n    ) \r\n}\r\n\r\nexport default CardRestaurant\r\n",[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\Card_all_chef\\Card_all_chef.tsx",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\Card_dish\\Card_dish.tsx",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\Card_week_chef\\Card_week_chef.tsx",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\Card_dish_modal\\Card_dish_modal.tsx",["223","224"],[],"import React from \"react\";\r\nimport \"./Card_dish_modal.css\"\r\nimport {Iprops} from \"../../interfaces\"\r\nimport shekel from \"../../assets/icons/shekel-icon.svg\"\r\nimport minusIcon from \"../../assets/icons/minus-icon.svg\"\r\nimport plusIcon from \"../../assets/icons/plus-icon.svg\"\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IRootState } from \"../../interfaces\";\r\n\r\nconst CardDishModal: React.FC<Iprops> = (props:Iprops)=> {\r\n        const dispatch = useDispatch();\r\n        const [Quantity, setQuantity] = useState (1)\r\n        const minQuantity = 1;\r\n        const counter = useSelector((state: IRootState) => state.counter);\r\n\r\n    const handlePlusClick = () => {\r\n        setQuantity(Quantity+1)\r\n    }\r\n    const handleMinusClick = () => {\r\n        if (Quantity > minQuantity) {\r\n        setQuantity(Quantity-1)\r\n        }\r\n    }\r\n    return (\r\n        <button className={`modal-dish-card ${props.class}`} onClick={props.onClick} >\r\n            <div className=\"all-details-dish\">\r\n                <div className=\"up-part-card-dish\">\r\n                    <img src={props.src} alt={props.alt} className=\"img-card-dish-modal\"/>\r\n                    <div className=\"name-card-dish\">{props.name} </div>\r\n                    <div className=\"ingredients-card-dish-modal\">\r\n                        {props.ingredients}</div>\r\n                </div>\r\n                <div className=\"price-div-modal\">\r\n                    <hr className=\"hr-left\" />\r\n                    <img src={shekel} alt=\"\" />\r\n                    <div className=\"price-card-dish\">{props.price}</div>\r\n                    <hr className=\"hr-right\"/>\r\n                    <hr className=\"hr-mobile\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"side-dish-container\">\r\n                <div className=\"title-side-dish\"> Choose a side </div>\r\n                <div className=\"side-dish-content\">                    \r\n                    {props.sideDishes}\r\n                </div>\r\n            </div>\r\n            <div className=\"changes-container\">\r\n                <div className=\"title-changes-dish\">Changes</div>\r\n                <div className=\"changes-content\">                    \r\n                {props.changes}\r\n                </div>\r\n            </div>\r\n            <div className=\"quantity-container\">\r\n                <div className=\"quantity-title\">\r\n                    Quantity\r\n                </div>\r\n            <div className=\"counter-continer\">\r\n                <button onClick={handleMinusClick}>\r\n                    <img src={minusIcon} alt=\"minus-icon\" className=\"minus-button\" />\r\n                </button>\r\n                <p>{Quantity}</p>\r\n                <button onClick={handlePlusClick}>\r\n                   <img src={plusIcon} alt=\"plus-icon\" /> \r\n                </button>\r\n            </div>\r\n            <button className=\"button-bag-modal\">\r\n                ADD TO BAG\r\n            </button>\r\n            </div>\r\n        </button>\r\n    ) \r\n}\r\n\r\nexport default CardDishModal","C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\navbar\\Bag_Nav\\BagNav.tsx",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\NavButton_nav\\NavButton.tsx",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\General\\Navlink_button\\Navlink_button.tsx",[],[],"C:\\Users\\ROTEM\\Desktop\\Course Fullstack\\exercises\\final project\\epicure-front\\src\\component\\navbar\\Search_nav\\SearchNav.tsx",[],[],{"ruleId":"225","severity":1,"message":"226","line":17,"column":13,"nodeType":"227","messageId":"228","endLine":17,"endColumn":35},{"ruleId":"225","severity":1,"message":"229","line":18,"column":13,"nodeType":"227","messageId":"228","endLine":18,"endColumn":31},{"ruleId":"225","severity":1,"message":"230","line":19,"column":13,"nodeType":"227","messageId":"228","endLine":19,"endColumn":29},{"ruleId":"225","severity":1,"message":"231","line":20,"column":13,"nodeType":"227","messageId":"228","endLine":20,"endColumn":26},{"ruleId":"225","severity":1,"message":"232","line":21,"column":13,"nodeType":"227","messageId":"228","endLine":21,"endColumn":25},{"ruleId":"225","severity":1,"message":"233","line":16,"column":13,"nodeType":"227","messageId":"228","endLine":16,"endColumn":26},{"ruleId":"234","severity":1,"message":"235","line":11,"column":16,"nodeType":"236","messageId":"237","endLine":11,"endColumn":24},{"ruleId":"234","severity":1,"message":"238","line":11,"column":26,"nodeType":"236","messageId":"237","endLine":11,"endColumn":37},{"ruleId":"239","severity":1,"message":"240","line":52,"column":25,"nodeType":"241","messageId":"242","endLine":52,"endColumn":36},{"ruleId":"239","severity":1,"message":"240","line":39,"column":25,"nodeType":"241","messageId":"242","endLine":39,"endColumn":36},{"ruleId":"234","severity":1,"message":"243","line":10,"column":7,"nodeType":"236","messageId":"237","endLine":10,"endColumn":15},{"ruleId":"225","severity":1,"message":"244","line":24,"column":21,"nodeType":"227","messageId":"228","endLine":24,"endColumn":88},{"ruleId":"225","severity":1,"message":"244","line":25,"column":21,"nodeType":"227","messageId":"228","endLine":25,"endColumn":76},{"ruleId":"234","severity":1,"message":"245","line":4,"column":35,"nodeType":"236","messageId":"237","endLine":4,"endColumn":52},{"ruleId":"234","severity":1,"message":"246","line":13,"column":11,"nodeType":"236","messageId":"237","endLine":13,"endColumn":21},{"ruleId":"234","severity":1,"message":"247","line":14,"column":12,"nodeType":"236","messageId":"237","endLine":14,"endColumn":24},{"ruleId":"234","severity":1,"message":"246","line":13,"column":11,"nodeType":"236","messageId":"237","endLine":13,"endColumn":21},{"ruleId":"234","severity":1,"message":"247","line":14,"column":12,"nodeType":"236","messageId":"237","endLine":14,"endColumn":24},{"ruleId":"234","severity":1,"message":"248","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"249","line":15,"column":10,"nodeType":"236","messageId":"237","endLine":15,"endColumn":26},{"ruleId":"234","severity":1,"message":"250","line":19,"column":9,"nodeType":"236","messageId":"237","endLine":19,"endColumn":17},{"ruleId":"234","severity":1,"message":"247","line":20,"column":10,"nodeType":"236","messageId":"237","endLine":20,"endColumn":22},{"ruleId":"234","severity":1,"message":"251","line":22,"column":10,"nodeType":"236","messageId":"237","endLine":22,"endColumn":18},{"ruleId":"234","severity":1,"message":"252","line":22,"column":20,"nodeType":"236","messageId":"237","endLine":22,"endColumn":31},{"ruleId":"253","severity":1,"message":"254","line":37,"column":49,"nodeType":"255","messageId":"256","endLine":37,"endColumn":51},{"ruleId":"253","severity":1,"message":"254","line":42,"column":43,"nodeType":"255","messageId":"256","endLine":42,"endColumn":45},{"ruleId":"234","severity":1,"message":"243","line":12,"column":7,"nodeType":"236","messageId":"237","endLine":12,"endColumn":15},{"ruleId":"257","severity":1,"message":"258","line":23,"column":3,"nodeType":"259","endLine":23,"endColumn":11,"suggestions":"260"},{"ruleId":"234","severity":1,"message":"250","line":12,"column":15,"nodeType":"236","messageId":"237","endLine":12,"endColumn":23},{"ruleId":"234","severity":1,"message":"261","line":15,"column":15,"nodeType":"236","messageId":"237","endLine":15,"endColumn":22},"react/jsx-pascal-case","Imported JSX component Popular_restaurant must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Signature_dish must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Icon_meaning must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Week_chef must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component About_us must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component All_chefs must be in PascalCase or SCREAMING_SNAKE_CASE","@typescript-eslint/no-unused-vars","'password' is assigned a value but never used.","Identifier","unusedVar","'setPassword' is assigned a value but never used.","no-self-assign","'state.value' is assigned to itself.","MemberExpression","selfAssignment","'navigate' is assigned a value but never used.","Imported JSX component Navlink_button must be in PascalCase or SCREAMING_SNAKE_CASE","'IrestaurantsValue' is defined but never used.","'restFilter' is assigned a value but never used.","'activeButton' is assigned a value but never used.","'useEffect' is defined but never used.","'dishesPageFilter' is defined but never used.","'dispatch' is assigned a value but never used.","'dishCard' is assigned a value but never used.","'setDishCard' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array. If 'setrestId' needs the current value of 'props.id', you can also switch to useReducer instead of useState and read 'props.id' in the reducer.","ArrayExpression",["262"],"'counter' is assigned a value but never used.",{"desc":"263","fix":"264"},"Update the dependencies array to be: [props.id, restId]",{"range":"265","text":"266"},[568,576],"[props.id, restId]"]